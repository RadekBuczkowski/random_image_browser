<!-- This file contains styles for the blue button (see Classes/Wpf/PushRepeatButton.cs) -->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:w="clr-namespace:Random_Image.Classes.Wpf">

    <!-- Blue button brushes -->

    <SolidColorBrush x:Key="ButtonBorder" Color="#FF003C74" />

    <LinearGradientBrush x:Key="DefaultButtonBackgroundFill" StartPoint="0,1" EndPoint="0,0">
        <GradientStop Color="#FF244FE0" Offset="0" />
        <GradientStop Color="#FF2452EB" Offset="1" />
        <GradientStop Color="#FFAFF1FF" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DisabledButtonBackgroundFill" StartPoint="0,1" EndPoint="0,0">
        <GradientStop Color="#FF4B4B59" Offset="0" />
        <GradientStop Color="#FFAF8FBF" Offset="1" />
    </LinearGradientBrush>

    <!-- Common blue button definition -->

    <Style x:Key="styleBlueButton" BasedOn="{StaticResource styleControl}" TargetType="{x:Type ButtonBase}">
        <Setter Property="FontFamily" Value="Tahoma" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Effect" Value="{StaticResource shadowMedium}" />
        <Setter Property="FontSize" Value="{Binding Path=ActualWidth, RelativeSource={RelativeSource Mode=Self},
            Converter={StaticResource multiply}, ConverterParameter=0.15}" />
        <Setter Property="Width" Value="{Binding Path=ActualWidth, Converter={StaticResource multiply},
            ConverterParameter=0.06, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
        <Setter Property="Height" Value="{Binding Path=ActualWidth, Converter={StaticResource multiply},
            ConverterParameter=0.06, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid x:Name="rootGrid" RenderTransformOrigin=".5,.5">
                        <Grid.RenderTransform>
                            <RotateTransform Angle="{Binding Path=Angle, Converter={StaticResource multiply},
                                                 ConverterParameter=-1, RelativeSource={RelativeSource Mode=FindAncestor,
                                                 AncestorType={x:Type w:PushRepeatButton}}}" />
                        </Grid.RenderTransform>

                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <Rectangle x:Name="bottomBorder" Grid.RowSpan="2" Style="{StaticResource controlHighlighting}"
                                   Fill="{StaticResource DefaultButtonBackgroundFill}"
                                   RadiusX="{TemplateBinding ActualHeight, Converter={StaticResource multiply},
                                       ConverterParameter=0.5 }" 
                                   RadiusY="{TemplateBinding ActualHeight, Converter={StaticResource multiply},
                                       ConverterParameter=0.5 }" />

                        <Rectangle x:Name="highlight" Fill="White" IsHitTestVisible="False"
                                       Margin="{TemplateBinding ActualHeight, Converter={StaticResource thicknessMultiply},
                                           ConverterParameter=0.13;0.045;0.13;0 }" 
                                       RadiusX="{TemplateBinding ActualHeight, Converter={StaticResource multiply},
                                           ConverterParameter=0.5 }" 
                                       RadiusY="{TemplateBinding ActualHeight, Converter={StaticResource multiply},
                                           ConverterParameter=0.5 }" >
                            <Rectangle.OpacityMask>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0.002,1">
                                    <GradientStop Color="#FFFFFFFF" Offset="0" />
                                    <GradientStop Color="#00FFFFFF" Offset="1" />
                                </LinearGradientBrush>
                            </Rectangle.OpacityMask>
                        </Rectangle>

                        <StackPanel x:Name="contentPresenter" Grid.RowSpan="2" IsHitTestVisible="False"
                                    Orientation="Horizontal"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Margin="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                    RenderTransformOrigin="0.5,0.5">
                            <TextBlock Text="{TemplateBinding Content}" Name="contentText" SnapsToDevicePixels="True" />
                            <TextBlock x:Name="shortcutSeparator" Text=" " FontFamily="Tahoma" />
                            <TextBlock x:Name="shortcutText" Text="{TemplateBinding Tag}" VerticalAlignment="Center" 
                                       SnapsToDevicePixels="True" Foreground="Gold" FontFamily="Tahoma"
                                       FontSize="{Binding ElementName=contentText, Path=FontSize,
                                           Converter={StaticResource multiply}, ConverterParameter=0.5 }" />
                            <StackPanel.RenderTransform>
                                <TransformGroup>
                                    <TranslateTransform X="0" Y="0" />
                                    <RotateTransform Angle="{Binding Path=Angle, Converter={StaticResource multiply},
                                                         ConverterParameter=1, RelativeSource={RelativeSource
                                                         Mode=FindAncestor, AncestorType={x:Type w:PushRepeatButton}}}" />
                                </TransformGroup>
                            </StackPanel.RenderTransform>
                        </StackPanel>

                        <Rectangle Grid.RowSpan="2" x:Name="buttonSelection" Style="{StaticResource controlSelection}"
                                   RadiusX="{TemplateBinding ActualHeight,
                                       Converter={StaticResource multiply}, ConverterParameter=0.5 }" 
                                   RadiusY="{TemplateBinding ActualHeight,
                                       Converter={StaticResource multiply}, ConverterParameter=0.5 }" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard Name="CycleUpDown">
                                <Storyboard>
                                    <DoubleAnimation From="-3" To="3" BeginTime="0:0:1" Duration="0:0:0.3" AutoReverse="True"
                                                     RepeatBehavior="Forever"
                                                     Storyboard.TargetName="contentPresenter"
                                                     Storyboard.TargetProperty=
                                        "(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <StopStoryboard BeginStoryboardName="CycleUpDown" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
                            <StopStoryboard BeginStoryboardName="CycleUpDown" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="PreviewMouseLeftButtonUp">
                            <SeekStoryboard Offset="0:0:0" BeginStoryboardName="CycleUpDown" />
                            <ResumeStoryboard BeginStoryboardName="CycleUpDown" />
                        </EventTrigger>
                        <Trigger Property="FontFamily" Value="Wingdings">
                            <Setter TargetName="shortcutSeparator" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="shortcutText" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Tag" Value="{x:Null}">
                            <Setter TargetName="shortcutSeparator" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="shortcutText" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Padding" Value="0,3,0,0" />
                            <Setter Property="Effect" Value="{StaticResource shadowSmall}" />
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform X="1" Y="2" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill" TargetName="bottomBorder">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                        <GradientStop Color="#FF1694FF" Offset="0" />
                                        <GradientStop Color="#FF2B48BE" Offset="0.42" />
                                        <GradientStop Color="DarkBlue" Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="bottomBorder" Property="Fill"
                                    Value="{StaticResource DisabledButtonBackgroundFill}" />
                            <Setter TargetName="bottomBorder" Property="Stroke" Value="Silver" />
                            <Setter TargetName="bottomBorder" Property="StrokeThickness" Value="0" />
                            <Setter TargetName="shortcutText" Property="Foreground" Value="Silver" />
                            <Setter TargetName="highlight" Property="Fill" Value="#FFF0F0F0" />
                            <Setter Property="Foreground" Value="#FFAFAFAF" />
                            <Setter Property="Effect" Value="{x:Null}" />
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform X="2" Y="4" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Round navigation repeat button -->

    <Style x:Key="stylePushRepeatBlueButton" BasedOn="{StaticResource styleBlueButton}"
           TargetType="{x:Type w:PushRepeatButton}">
        <Setter Property="FontFamily" Value="Wingdings" />
        <Setter Property="FontSize" Value="{Binding Path=ActualWidth, RelativeSource={RelativeSource Mode=Self},
            Converter={StaticResource multiply}, ConverterParameter=0.5}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Angle" Value="15" />
        <Setter Property="Margin" Value="4" />
        <Setter Property="Width" Value="{Binding Path=ActualWidth, Converter={StaticResource multiply},
            ConverterParameter=0.05, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
        <Setter Property="Height" Value="{Binding Path=ActualWidth, Converter={StaticResource multiply},
            ConverterParameter=0.05, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="300" />
        <Setter Property="ToolTipService.BetweenShowDelay" Value="0" />
        <Setter Property="ToolTipService.ShowDuration" Value="2500" />
    </Style>

</ResourceDictionary>